{{ if .Values.ingress.active -}}
{{ if .Values.ingress.mtls.active -}}
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: mtls-option
  namespace: {{ .Values.namespace }}
spec:
  minVersion: VersionTLS12
  maxVersion: VersionTLS13
  clientAuth:
    secretNames:
    - {{ .Values.ingress.fqdn | replace "." "-" }}-ca-certs-bundle
    clientAuthType: RequireAndVerifyClientCert

---

{{ end -}}
# https://sysadmins.co.za/https-using-letsencrypt-and-traefik-with-k3s/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: {{ .Chart.Name }}
    component: ingress
    technology: traefik
  name: {{ .Chart.Name }}-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.clusterIssuer }}
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    {{- if .Values.ingress.mtls.active }}
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.options: {{ .Values.namespace }}-mtls-option@kubernetescrd
    {{- end }}
spec:
  ingressClassName: traefik
  rules:
  - host: {{ .Values.ingress.fqdn }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Chart.Name }}-proxy
            port:
              number: {{ .Values.proxy.ports.internal }}
  tls:
  - hosts:
    - {{ .Values.ingress.fqdn }}
    secretName: {{ .Values.ingress.tls.secretName }}
{{- end }}
